version: "3.7"

services:
  postgres:
    container_name: postgres
    image: postgres:11.5
    networks:
      - main
    ports:
      - "5434:5432"
    volumes:
      - pg-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=postgres

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: pgadmin4@pgadmin.org
      PGADMIN_DEFAULT_PASSWORD: admin
    volumes:
      - pgadmin:/root/.pgadmin
    ports:
      - "5050:80"
    depends_on:
      - "postgres"
    networks:
      - main
    restart: unless-stopped

  redis:
    image: redis:6.0.9-alpine
    volumes:
      - redis-data:/data
    container_name: redis
    networks:
      - main

  redis-commander:
    container_name: redis-commander
    hostname: redis-commander
    image: rediscommander/redis-commander:latest
    restart: always
    environment:
      - REDIS_HOST=redis
    ports:
      - "8085:8081"
    networks:
      - main

  nginx:
    container_name: nginx
    build:
      context: ./nginx
      dockerfile: dev/Dockerfile
    ports:
      - "80:80"
    depends_on:
      - frontend
      - backend
    volumes:
      - ./nginx/dev/dev.conf:/etc/nginx/nginx.conf:ro
    networks:
      - main

  frontend:
    container_name: frontend
    build:
      context: ./quasar
    networks:
      - main
    ports:
      - "8080:8080"
    volumes:
      - ./quasar:/app/:rw
    env_file:
      - .env

  backend: &backend
    container_name: backend
    build:
      context: ./backend
      dockerfile: docker/Dockerfile.dev
    command:
      - python3
      - manage.py
      - runserver
      - 0.0.0.0:8000
    volumes:
      - ./backend:/code
    networks:
      - main
    ports:
      - "8000:8000"
      - "8888:8888"
    env_file:
      - .env
    depends_on:
      - postgres
      - redis

  celery:
    <<: *backend
    container_name: celery
    command:
      - python3
      - manage.py
      - start_celery_local
    ports: []

  flower:
    image: mher/flower:latest
    container_name: flower
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/1
      - FLOWER_PORT=5555
    ports:
      - 5555:5555
    networks:
      - main
    depends_on:
      - redis

  mailhog:
    container_name: mailhog
    image: mailhog/mailhog
    ports:
      - 1025:1025
      - 8025:8025
    networks:
      - main

volumes:
  pg-data:
  django-static:
  redis-data:
  pgadmin:

networks:
  main:
    driver: bridge
